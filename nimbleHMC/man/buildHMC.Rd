% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/configuration.R
\name{buildHMC}
\alias{buildHMC}
\title{Create HMC}
\usage{
buildHMC(model, nodes = character(), control = list(), print = TRUE, ...)
}
\arguments{
\item{model}{A nimble model, as returned by `nimbleModel`}

\item{nodes}{A character vector of stochastic node names to sample by HMC. If an empty character vector is provided (the default), then all non-data nodes will be sampled.}

\item{control}{Optional named list of control parameters to be passed as the `control` argument to `sampler_HMC`.  See `help(sampler_HMC)` for details.}

\item{print}{Logical argument specifying whether to print the montiors and samplers.  Default is TRUE.}

\item{...}{Other arguments that will be passed to `configureHMC` and from there to `configureMCMC`}
}
\description{
Create a nimble MCMC object containing only an HMC sampler
}
\details{
This is the most direct way to create an HMC in nimble.  Use this if you don't need to modify the MCMC configuration before or after adding an HMC sampler.
}
\examples{
nimbleOptions(enableDerivs = TRUE)

code <- nimbleCode({
    b0 ~ dnorm(0, 0.001)
    b1 ~ dnorm(0, 0.001)
    sigma ~ dunif(0, 10000)
    for(i in 1:N) {
        mu[i] <- b0 + b1 * x[i]
        y[i] ~ dnorm(mu[i], sd = sigma)
    }
})

N <- 10
constants <- list(N = N, x = 1:N)
data <- list(y = 1:N)
inits <- list(b0 = 1, b1 = 0.1, sigma = 1)
Rmodel <- nimbleModel(code, constants, data, inits, buildDerivs = TRUE)

Rmcmc <- buildHMC(Rmodel)

# Cmodel <- compileNimble(Rmodel)
# Cmcmc <- compileNimble(Rmcmc, project = Rmodel)
# samples <- runMCMC(Cmcmc)
}
\seealso{
\code{\link{addHMC}} \code{\link{configureHMC}} \code{\link{sampler_HMC}} \code{\link{configureMCMC}} \code{\link{addSampler}}
}
\author{
Daniel Turek
}
